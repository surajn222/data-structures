@startuml
!pragma layout smetana
allow_mixing


top to bottom direction




card c1 [
Array = va1, val2, val3, val4, val5
LinkedList = node1, node2, node3, node4, node5
Node:
    Value + address to next location
]

card c3 [
Definition of Linkedlist:
    Linear data structure, collection of linked nodes (values +pointer) stored in known locations
]

map Array_vs_Linkedlist {
 Definition => Collection of values | collection of nodes
 Locations => Continuous | non continuous
 Cost of accessing an element => O(1) | O(n)
 Size => Fixed size | Dynamic size
 Memory utilization => Fixed | dynamic
 Space => Wastage | No wastage
 Memory requirement for each node => Less | More
 Cost of Insertion: At beginning => O(n) | O(1)
 Cost of Insertion: At end => O(1) | O(n)
 Cost of Insertion: At nth postiion => O(n) - p, p is the position of element, proportional to size
}



c1 -down-> c3
c3 -down-> Array_vs_Linkedlist


@enduml


